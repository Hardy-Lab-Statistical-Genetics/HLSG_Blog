[{"content":"  Suppose we want to run different linear models on a dataset. We can write it with a for loop in R, but as a result of many R functions working with one core, this process, It will eventually run on one core and is time-consuming. Another solution is to use multiprocess packages in R, like parallel. These packages are very good, but the time of the executions does not decrease linearly when we increase the computation cores. One solution is that we run our code in parallel in different R sessions manually, like the Jobs option in Rstudio. At first glance, this idea is hard to implement because we need to have different R scripts and run them simultaneously. The HLSGUtils package provides some functions to make this work simpler with dynamic system resource management of memory and thread options.\nWe will try to describe parallelization in HLGSUtils step-by-step. First, we need a base script that we want to run concurrently. A simple example is shown below.\nlinear_fitter \u0026lt;- function(formula, n){ df \u0026lt;- data.frame( y = rnorm(n, mean = 3), x1 = rnorm(n), x2 = rnorm(n), x3 = rnorm(n) ) fit \u0026lt;- lm(as.formula(formula), data = df) write_rds(broom::tidy(fit),sprintf(\u0026quot;~/Desktop/fittel_lm_%s.rds\u0026quot;,n)) print(sprintf(\u0026quot;%s modeling was done with %s samples!\u0026quot;, formula, n)) } Save the script in some path like ~/Desktop/modeling.R linear_fitter is only run in the R environment. We need to convert this function that is run from the command line. function_to_Rscript converts function to command line format. This function needs:\n function_from_source: The path of the saved R function function_name: The name of the function in the source file packages: The packages that are needed to be called arguments: Names of function arguments arguments_class: arguments function class types script_save_path: The generated R script path  library(HLSGUtils) function_to_Rscript( function_from_source = \u0026quot;~/Desktop/modeling.R\u0026quot;, function_name = \u0026quot;linear_fitter\u0026quot;, packages = c(\u0026quot;readr\u0026quot;,\u0026quot;broom\u0026quot;), arguments = c(\u0026quot;formula\u0026quot;,\u0026quot;n\u0026quot;), arguments_class = c(\u0026quot;character\u0026quot;,\u0026quot;integer\u0026quot;), script_save_path = \u0026quot;~/Desktop/modeling_r_script.R\u0026quot; ) The resulted script is ready to run on the command line. The converted code can be found below.\n############################################################ # linear_fitter # ############################################################ args \u0026lt;- commandArgs(trailingOnly = TRUE) if (length(args) \u0026lt; 2){stop(\u0026#39;I think you forgot your parameters\u0026#39;)} formula \u0026lt;- args[1] n \u0026lt;- as.integer(args[2]) flush.console() # Load Libraries suppressMessages(library(readr)) suppressMessages(library(broom)) source(\u0026quot;~/Desktop/modeling.R\u0026quot;) # Add Function Its Arguments linear_fitter( formula = formula, n = n ) modeling_r_script.R can be run in command line format by Rscript --vanilla command and set input arguments.\nRscript --vanilla ~/Desktop/modeling_r_script.R y~x1 100 ## [1] \u0026quot;y~x1 modeling was done with 100 samples!\u0026quot; After running the command, the result table is:\nreadr::read_rds(\u0026quot;~/Desktop/fittel_lm_100.rds\u0026quot;) ## # A tibble: 2 × 5 ## term estimate std.error statistic p.value ## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 (Intercept) 3.08 0.100 30.7 4.73e-52 ## 2 x1 -0.0125 0.0941 -0.133 8.95e- 1 Finally, we want to run multiple models in parallel. parallel_rscripts allows you to run R command line functions in parallel. It needs to set input arguments and system resource management thresholds.\n rscript_path: The path of command line format script args: list of function arguments used_memory_treshold: The total percentage of system memory that is in use. used_cpu_treshold: The total percentage of threads that is in use. sleep_time: sleep time between two work in seconds  sample_size = c(100, 200, 300) formulas = c(\u0026quot;y~x1\u0026quot;, \u0026quot;y~x1+x2\u0026quot;, \u0026quot;y~x1+x2+x3\u0026quot;) parallel_rscripts( rscript_path = \u0026quot;~/Desktop/modeling_r_script.R\u0026quot;, args = list(formula = formulas, n = sample_size), used_memory_treshold = 80, used_cpu_treshold = 80, sleep_time = 5 ) ","date":"2022-03-11T00:00:00Z","image":"https://Hardy-Lab-Statistical-Genetics.github.io/p/how-to-parrallelize-r-functions-with-hlsgutils-package/images/peakpx_hude971b94ce34b121bdc2a1e6bbdbd4df_215780_120x120_fill_q75_box_smart1.jpg","permalink":"https://Hardy-Lab-Statistical-Genetics.github.io/p/how-to-parrallelize-r-functions-with-hlsgutils-package/","title":"How to parrallelize R functions with HLSGUtils package?"},{"content":"  Every seven months, the volume of genomics data doubles. As a result, scientists in this field face big data challenges such as data management and designing efficient algorithms. In this post, we will attempt to apply Glow solution to create big data architectures to genomics data. Glow is built on Apache Spark and Delta Lake, two popular big data technologies for distributed data processing and storage.\nsource: databricks.com\n We try to read the last version of GRCh38 dbSNP and store it in delta format. To read VCF data, we need to open a Spark session with spark-shell and add dependencies. To add Glow and Delta dependencies to the Spark Session, first go to the Spark source directory, then run the command below.\n./bin/spark-shell --master local[20]\\ --packages io.projectglow:glow-spark3_2.12:1.1.2,io.delta:delta-core_2.12:1.0.1 To choose the delta.io version, you need to find a compatible version with your spark version. The proper delta version for your spark can be found in the table below.\n .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-2808dc08{}.cl-2802ef64{font-family:'DejaVu Sans';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(255, 255, 255, 1.00);background-color:transparent;}.cl-2803022e{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-280332c6{width:140.4pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-280332d0{width:123.2pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-28033384{width:123.2pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-2803338e{width:140.4pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-2803338f{width:140.4pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-28033390{width:123.2pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-28033398{width:140.4pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-28033399{width:123.2pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-2803339a{width:140.4pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-2803339b{width:123.2pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}Table 1: Performance characteristics of sequence types\n Delta.Lake.version\nApache.Spark.version\n1.1.x\n3.2.x\n1.0.x\n3.1.x\n0.7.x and 0.8.x\n3.0.x\nBelow 0.7.0\n2.4.2 - 2.4.\u0026lt;latest\u0026gt;\nsource: docs.delta.io\n   var dest = document.getElementById(\"6460303d-b6b5-4084-b30f-47624dbe9e59\"); var template = document.getElementById(\"09b5f430-de93-4016-8753-2eaf6d9df848\"); var caption = template.content.querySelector(\"caption\"); if(caption) { caption.style.cssText = \"display:block;text-align:center;\"; var newcapt = document.createElement(\"p\"); newcapt.appendChild(caption) dest.parentNode.insertBefore(newcapt, dest.previousSibling); } var fantome = dest.attachShadow({mode: 'open'}); var templateContent = template.content; fantome.appendChild(templateContent);  Spark downloads jar file dependencies in .ivy2/jars directory at your home. It is sufficient to add the jars directory to Spark if you do not want to download dependencies again.\n./bin/spark-shell --master local[20] --jars \u0026quot;~/.ivy2/jars/*\u0026quot; Because some fields of SNP data contain very large character content, it is better to increase the Java heap memory. Look in the conf folder in the Spark directory and add the following to spark-defaults.conf:\nspark.memory.offHeap.enabled true spark.memory.offHeap.size 2048m We open the Scala REPL with a spark session after running the spark-shell. Although the Spark Shell can be used to build Spark Scala API codes, it lacks the user-friendliness of IDEs. It’s much easier to write codes and then paste into the REPL. Using the :paste command in the REPL provides a quick way to paste multiline codes.\nscala\u0026gt; :paste // Entering paste mode (ctrl-D to finish) To add the VCF reader format to Spark, import the Glow library and register the Spark session.\nimport io.projectglow.Glow Glow.register(spark) Below, the SNP data is read and some columns are renamed and selected.\nval vcf_df = spark.read.format(\u0026quot;vcf\u0026quot;) .load(\u0026quot;./data/00-All.vcf.gz\u0026quot;) .withColumn(\u0026quot;ID\u0026quot;,explode(col(\u0026quot;names\u0026quot;))) .drop(\u0026quot;names\u0026quot;,\u0026quot;genotypes\u0026quot;) .select( col(\u0026quot;contigName\u0026quot;).as(\u0026quot;CH\u0026quot;), col(\u0026quot;start\u0026quot;).as(\u0026quot;POS\u0026quot;), col(\u0026quot;ID\u0026quot;), col(\u0026quot;end\u0026quot;).as(\u0026quot;END\u0026quot;), col(\u0026quot;referenceAllele\u0026quot;).as(\u0026quot;REF\u0026quot;), col(\u0026quot;alternateAlleles\u0026quot;).as(\u0026quot;ALT\u0026quot;) ) Spark jobs are lazy. To see results, it needs some actions, like a simple show function.\nvcf_df.show vcf_df.printSchema Delta Lake is a data format that is based on Apache Parquet but has been optimized for analytic tasks. To write data in delta format, use the below code.\nvcf_df .write .mode(\u0026quot;overwrite\u0026quot;) .format(\u0026quot;delta\u0026quot;) .save(\u0026quot;./data/SNP_GRCh38.delta\u0026quot;) Now data is ready to Play!\nval snp = spark .read .format(\u0026quot;delta\u0026quot;) .load(\u0026quot;./data/SNP_GRCh38.delta\u0026quot;) snp.groupBy(\u0026quot;CH\u0026quot;).count.show(30) Refrences  Introduction to Glow Glow V1.0.0, Next Generation Genome Wide Analytics   ","date":"2022-03-07T00:00:00Z","image":"https://Hardy-Lab-Statistical-Genetics.github.io/p/fast-and-scalable-genomic-workflows-with-spark/images/genomics_huc02ed4e73c4ac8a7a18a8095611a84c8_156950_120x120_fill_q75_box_smart1.jpg","permalink":"https://Hardy-Lab-Statistical-Genetics.github.io/p/fast-and-scalable-genomic-workflows-with-spark/","title":"Fast and Scalable Genomics Workflows with Spark"},{"content":"  What is ADNI Dataset? The Alzheimer’s Disease Neuroimaging Initiative (ADNI) unites researchers with study data as they work to define the progression of Alzheimer’s disease (AD). ADNI researchers collect, validate and utilize data, including MRI and PET images, genetics, cognitive tests, CSF and blood biomarkers as predictors of the disease. Study resources and data from the North American ADNI study are available through this website, including Alzheimer’s disease patients, mild cognitive impairment subjects, and elderly controls.\n How to Get the ADNI Dataset? For R users, the ADNI project has developed a data package ADNIMERGE which contains coded data, documentation, and analysis vignettes. To install the package first, we need to download the source code ADNIMERGE_0.0.1.tar.gz from LONI. In ADNI’s download section, you can find the package source as you see in the below image.\nAfter downloading the compressed ADNIMERGE_0.0.1.tar.gz file, it can be installed on your R system by entering the following R code.\ninstall.packages(\u0026quot;./ADNIMERGE_0.0.1.tar.gz\u0026quot;, repos = NULL, type = \u0026quot;source\u0026quot;) To load data, you need only call adnimerge inside ADNIMERGE package.\nlibrary(ADNIMERGE) data(adnimerge) A adnimerge has 15741 records and 115 fields. At ADNI, there are many fields, so it is hard to explore data at first glance. In these situations, the summarytools R package is very helpful. The function dfsummary creates a pretty data summary table.You can use below script to install package:\nremotes::install_github(\u0026quot;dcomtois/summarytools\u0026quot;, build_vignettes = TRUE) library(summarytools) dfSummary(adnimerge) Data Frame Summary adnimerge Dimensions: 15741 x 115 Duplicates: 0    Variable Label Stats / Values Freqs (% of Valid) Graph Missing     RID [labelled, numeric] Participant roster ID Mean (sd) : 2782.6 (2166.5)min \u0026le; med \u0026le; max:2 \u0026le; 2196 \u0026le; 7025IQR (CV) : 3887 (0.8) 2378 distinct values  0 (0.0%)   COLPROT [labelled, factor] Study protocol of data collection 1. ADNI12. ADNIGO3. ADNI24. ADNI3 5013(31.8%)804(5.1%)6945(44.1%)2979(18.9%)  0 (0.0%)   ORIGPROT [labelled, factor] Original study protocol 1. ADNI12. ADNIGO3. ADNI24. ADNI3 7227(45.9%)1236(7.9%)5674(36.0%)1604(10.2%)  0 (0.0%)   PTID [labelled, character] Original study protocol 1. 021_S_01782. 027_S_00743. 126_S_06054. 127_S_02595. 131_S_03846. 002_S_04137. 003_S_09088. 021_S_01599. 021_S_033710. 023_S_0031[ 2368 others ] 23(0.1%)23(0.1%)23(0.1%)23(0.1%)23(0.1%)22(0.1%)22(0.1%)22(0.1%)22(0.1%)22(0.1%)15516(98.6%)  0 (0.0%)   SITE [labelled, factor] Site 1. 0022. 0033. 0054. 0065. 0076. 0097. 0108. 0119. 01210. 013[ 57 others ] 389(2.5%)350(2.2%)210(1.3%)243(1.5%)298(1.9%)214(1.4%)101(0.6%)312(2.0%)214(1.4%)174(1.1%)13236(84.1%)  0 (0.0%)   VISCODE [labelled, character] Visit code 1. bl2. m123. m064. m245. m186. m367. m308. m039. m4810. m60[ 25 others ] 2378(15.1%)1896(12.0%)1618(10.3%)1576(10.0%)1318(8.4%)1030(6.5%)799(5.1%)793(5.0%)719(4.6%)423(2.7%)3191(20.3%)  0 (0.0%)   EXAMDATE [labelled, Date] Date min : 2005-09-07med : 2012-09-06max : 2022-01-06range : 16y 3m 30d 3771 distinct values  0 (0.0%)   DX.bl [labelled, factor] Baseline Dx 1. CN2. SMC3. EMCI4. LMCI5. AD 4722(30.1%)1244(7.9%)2880(18.3%)5154(32.8%)1712(10.9%)  29 (0.2%)   AGE [labelled, numeric] Age Mean (sd) : 73.3 (7)min \u0026le; med \u0026le; max:50.4 \u0026le; 73.4 \u0026le; 91.4IQR (CV) : 9.4 (0.1) 348 distinct values  8 (0.1%)   PTGENDER [labelled, character] Sex 1. Female2. Male 7083(45.0%)8658(55.0%)  0 (0.0%)   PTEDUCAT [labelled, numeric] Education Mean (sd) : 16.1 (2.8)min \u0026le; med \u0026le; max:4 \u0026le; 16 \u0026le; 20IQR (CV) : 4 (0.2) 16 distinct values  0 (0.0%)   PTETHCAT [labelled, factor] Ethnicity 1. Unknown2. Not Hisp/Latino3. Hisp/Latino 71(0.5%)15168(96.4%)502(3.2%)  0 (0.0%)   PTRACCAT [labelled, factor] Race 1. Am Indian/Alaskan2. Asian3. Hawaiian/Other PI4. Black5. White6. More than one7. Unknown 27(0.2%)279(1.8%)8(0.1%)667(4.2%)14559(92.5%)172(1.1%)29(0.2%)  0 (0.0%)   PTMARRY [labelled, character] Marital 1. Divorced2. Married3. Never married4. Unknown5. Widowed 1339(8.5%)12031(76.4%)510(3.2%)55(0.3%)1806(11.5%)  0 (0.0%)   APOE4 [labelled, numeric] Number of APOEe4 alleles Mean (sd) : 0.5 (0.6)min \u0026le; med \u0026le; max:0 \u0026le; 0 \u0026le; 2IQR (CV) : 1 (1.3) 0:8802(56.7%)1:5392(34.7%)2:1330(8.6%)  217 (1.4%)   FDG [labelled, numeric] Average FDG-PET of angular, temporal, and posterior cingulate Mean (sd) : 1.2 (0.2)min \u0026le; med \u0026le; max:0.6 \u0026le; 1.2 \u0026le; 1.8IQR (CV) : 0.2 (0.1) 3599 distinct values  12136 (77.1%)   PIB [labelled, numeric] Average PIB SUVR of frontal cortex, anterior cingulate, precuneus cortex, and parietal cortex Mean (sd) : 1.8 (0.4)min \u0026le; med \u0026le; max:1.1 \u0026le; 1.9 \u0026le; 2.9IQR (CV) : 0.8 (0.2) 186 distinct values  15518 (98.6%)   AV45 [labelled, numeric] AV45 ratio (cortical grey matter/whole cerebellum) Summary florbetapir cortical SUVR normalized by whole cerebellum. See Jagust lab PDF on LONI for details and cutoff info Mean (sd) : 1.2 (0.2)min \u0026le; med \u0026le; max:0.8 \u0026le; 1.1 \u0026le; 2.7IQR (CV) : 0.4 (0.2) 2378 distinct values  12747 (81.0%)   FBB [labelled, numeric] FBB ratio (cortical grey matter/whole cerebellum) Summary florbetaben cortical SUVR normalized by whole cerebellum. See Jagust lab PDF on LONI for details and cutoff info Mean (sd) : 1.2 (0.2)min \u0026le; med \u0026le; max:0.9 \u0026le; 1.1 \u0026le; 2IQR (CV) : 0.4 (0.2) 416 distinct values  15299 (97.2%)   ABETA [labelled, character] CSF ABETA 1. 17002. 11393. 12754. 10445. 12136. 12447. 13388. 16469. 168910. 1033[ 1707 others ] 351(14.8%)5(0.2%)5(0.2%)4(0.2%)4(0.2%)4(0.2%)4(0.2%)4(0.2%)4(0.2%)3(0.1%)1984(83.6%)  13369 (84.9%)   TAU [labelled, character] CSF TAU 1. 2. 213.93. 161.14. 173.15. 176.36. 178.97. 196.88. 207.29. 210.810. 215.2[ 1772 others ] 8(0.3%)5(0.2%)4(0.2%)4(0.2%)4(0.2%)4(0.2%)4(0.2%)4(0.2%)4(0.2%)4(0.2%)2327(98.1%)  13369 (84.9%)   PTAU [labelled, character] CSF PTAU 1. 2. 18.853. 20.874. 21.195. 21.46. 26.827. 12.168. 14.999. 15.1310. 15.18[ 1774 others ] 11(0.5%)6(0.3%)5(0.2%)5(0.2%)5(0.2%)5(0.2%)4(0.2%)4(0.2%)4(0.2%)4(0.2%)2319(97.8%)  13369 (84.9%)   CDRSB [labelled, numeric] CDR-SB Mean (sd) : 2.1 (2.9)min \u0026le; med \u0026le; max:0 \u0026le; 1 \u0026le; 18IQR (CV) : 3 (1.4) 31 distinct values  4473 (28.4%)   ADAS11 [labelled, numeric] ADAS 11 Mean (sd) : 10.9 (8.4)min \u0026le; med \u0026le; max:0 \u0026le; 8.7 \u0026le; 70IQR (CV) : 9 (0.8) 166 distinct values  4742 (30.1%)   ADAS13 [labelled, numeric] ADAS 13 (including Delayed Word Recall and Number Cancellation) Mean (sd) : 16.8 (11.5)min \u0026le; med \u0026le; max:0 \u0026le; 14 \u0026le; 85IQR (CV) : 14.7 (0.7) 206 distinct values  4840 (30.7%)   ADASQ4 [labelled, numeric] ADAS Delayed Word Recall Mean (sd) : 5.1 (3.1)min \u0026le; med \u0026le; max:0 \u0026le; 5 \u0026le; 10IQR (CV) : 6 (0.6) 11 distinct values  4712 (29.9%)   MMSE [labelled, numeric] MMSE Mean (sd) : 26.8 (3.9)min \u0026le; med \u0026le; max:0 \u0026le; 28 \u0026le; 30IQR (CV) : 4 (0.1) 31 distinct values  4702 (29.9%)   RAVLT.immediate [labelled, numeric] RAVLT Immediate (sum of 5 trials) Mean (sd) : 35.5 (13.8)min \u0026le; med \u0026le; max:0 \u0026le; 34 \u0026le; 75IQR (CV) : 20 (0.4) 76 distinct values  4824 (30.6%)   RAVLT.learning [labelled, numeric] RAVLT Learning (trial 5 - trial 1) Mean (sd) : 4.2 (2.8)min \u0026le; med \u0026le; max:-8 \u0026le; 4 \u0026le; 14IQR (CV) : 4 (0.7) 21 distinct values  4823 (30.6%)   RAVLT.forgetting [labelled, numeric] RAVLT Forgetting (trial 5 - delayed) Mean (sd) : 4.2 (2.7)min \u0026le; med \u0026le; max:-35 \u0026le; 4 \u0026le; 15IQR (CV) : 3 (0.6) 32 distinct values  4855 (30.8%)   RAVLT.perc.forgetting [labelled, numeric] RAVLT Percent Forgetting Mean (sd) : 57.2 (43.7)min \u0026le; med \u0026le; max:-1650 \u0026le; 57.1 \u0026le; 100IQR (CV) : 72.7 (0.8) 110 distinct values  4928 (31.3%)   LDELTOTAL [labelled, numeric] Logical Memory - Delayed Recall Mean (sd) : 8.7 (6.2)min \u0026le; med \u0026le; max:0 \u0026le; 9 \u0026le; 25IQR (CV) : 11 (0.7) 26 distinct values  6731 (42.8%)   DIGITSCOR [labelled, numeric] Digit Symbol Substitution Mean (sd) : 37.4 (14.4)min \u0026le; med \u0026le; max:0 \u0026le; 38 \u0026le; 83IQR (CV) : 18 (0.4) 81 distinct values  11941 (75.9%)   TRABSCOR [labelled, numeric] Trails B Mean (sd) : 117.2 (76.8)min \u0026le; med \u0026le; max:0 \u0026le; 89 \u0026le; 996IQR (CV) : 75 (0.7) 291 distinct values  5148 (32.7%)   FAQ [labelled, numeric] FAQ Mean (sd) : 5.2 (7.8)min \u0026le; med \u0026le; max:0 \u0026le; 1 \u0026le; 30IQR (CV) : 8 (1.5) 31 distinct values  4472 (28.4%)   MOCA [labelled, numeric] MOCA Mean (sd) : 23.3 (4.7)min \u0026le; med \u0026le; max:0 \u0026le; 24 \u0026le; 30IQR (CV) : 6 (0.2) 31 distinct values  8728 (55.4%)   EcogPtMem [labelled, numeric] Pt ECog - Mem Mean (sd) : 2.1 (0.7)min \u0026le; med \u0026le; max:1 \u0026le; 1.9 \u0026le; 4IQR (CV) : 1 (0.4) 60 distinct values  8441 (53.6%)   EcogPtLang [labelled, numeric] Pt ECog - Lang Mean (sd) : 1.7 (0.6)min \u0026le; med \u0026le; max:1 \u0026le; 1.6 \u0026le; 4IQR (CV) : 0.9 (0.4) 72 distinct values  8457 (53.7%)   EcogPtVisspat [labelled, numeric] Pt ECog - Vis/Spat Mean (sd) : 1.4 (0.6)min \u0026le; med \u0026le; max:1 \u0026le; 1.2 \u0026le; 4IQR (CV) : 0.6 (0.4) 54 distinct values  8526 (54.2%)   EcogPtPlan [labelled, numeric] Pt ECog - Plan Mean (sd) : 1.4 (0.6)min \u0026le; med \u0026le; max:1 \u0026le; 1.2 \u0026le; 4IQR (CV) : 0.6 (0.4) 30 distinct values  8472 (53.8%)   EcogPtOrgan [labelled, numeric] Pt ECog - Organ Mean (sd) : 1.5 (0.6)min \u0026le; med \u0026le; max:1 \u0026le; 1.3 \u0026le; 4IQR (CV) : 0.8 (0.4) 37 distinct values  8605 (54.7%)   EcogPtDivatt [labelled, numeric] Pt ECog - Div atten Mean (sd) : 1.8 (0.8)min \u0026le; med \u0026le; max:1 \u0026le; 1.8 \u0026le; 4IQR (CV) : 1 (0.4) 19 distinct values  8509 (54.1%)   EcogPtTotal [labelled, numeric] Pt ECog - Total Mean (sd) : 1.7 (0.6)min \u0026le; med \u0026le; max:1 \u0026le; 1.5 \u0026le; 4IQR (CV) : 0.7 (0.3) 610 distinct values  8450 (53.7%)   EcogSPMem [labelled, numeric] SP ECog - Mem Mean (sd) : 2.1 (1)min \u0026le; med \u0026le; max:1 \u0026le; 1.8 \u0026le; 4IQR (CV) : 1.6 (0.5) 60 distinct values  8394 (53.3%)   EcogSPLang [labelled, numeric] SP ECog - Lang Mean (sd) : 1.7 (0.8)min \u0026le; med \u0026le; max:1 \u0026le; 1.3 \u0026le; 4IQR (CV) : 1.1 (0.5) 78 distinct values  8388 (53.3%)   EcogSPVisspat [labelled, numeric] SP ECog - Vis/Spat Mean (sd) : 1.6 (0.8)min \u0026le; med \u0026le; max:1 \u0026le; 1.1 \u0026le; 4IQR (CV) : 0.9 (0.5) 55 distinct values  8556 (54.4%)   EcogSPPlan [labelled, numeric] SP ECog - Plan Mean (sd) : 1.7 (0.9)min \u0026le; med \u0026le; max:1 \u0026le; 1.2 \u0026le; 4IQR (CV) : 1 (0.5) 31 distinct values  8476 (53.8%)   EcogSPOrgan [labelled, numeric] SP ECog - Organ Mean (sd) : 1.8 (1)min \u0026le; med \u0026le; max:1 \u0026le; 1.3 \u0026le; 4IQR (CV) : 1.2 (0.6) 37 distinct values  8705 (55.3%)   EcogSPDivatt [labelled, numeric] SP ECog - Div atten Mean (sd) : 2 (1)min \u0026le; med \u0026le; max:1 \u0026le; 1.8 \u0026le; 4IQR (CV) : 1.8 (0.5) 19 distinct values  8585 (54.5%)   EcogSPTotal [labelled, numeric] SP ECog - Total Mean (sd) : 1.8 (0.9)min \u0026le; med \u0026le; max:1 \u0026le; 1.4 \u0026le; 4IQR (CV) : 1.2 (0.5) 827 distinct values  8396 (53.3%)   FLDSTRENG [labelled, character] MRI Field Strength 1. 1.5 Tesla MRI2. 3 Tesla MRI 3893(65.6%)2037(34.4%)  9811 (62.3%)   FSVERSION [labelled, character] FreeSurfer Software Version 1. Cross-Sectional FreeSurfe2. Cross-Sectional FreeSurfe3. Cross-Sectional FreeSurfe 4276(44.1%)1488(15.3%)3942(40.6%)  6035 (38.3%)   IMAGEUID [labelled, integer] LONI Image ID Mean (sd) : 389595.4 (356821.2)min \u0026le; med \u0026le; max:31863 \u0026le; 297274 \u0026le; 1501111IQR (CV) : 301933.2 (0.9) 9706 distinct values  6035 (38.3%)   Ventricles [labelled, numeric] UCSF Ventricles Mean (sd) : 41907.2 (23012.1)min \u0026le; med \u0026le; max:5650 \u0026le; 37092.5 \u0026le; 162729IQR (CV) : 28179.2 (0.5) 8704 distinct values  6625 (42.1%)   Hippocampus [labelled, numeric] UCSF Hippocampus Mean (sd) : 6762.5 (1230.9)min \u0026le; med \u0026le; max:2219 \u0026le; 6863 \u0026le; 11207IQR (CV) : 1706.2 (0.2) 4967 distinct values  7275 (46.2%)   WholeBrain [labelled, numeric] UCSF WholeBrain Mean (sd) : 1015190 (111322.1)min \u0026le; med \u0026le; max:521286.6 \u0026le; 1012846 \u0026le; 1486036IQR (CV) : 151314.5 (0.1) 9344 distinct values  6371 (40.5%)   Entorhinal [labelled, integer] UCSF Entorhinal Mean (sd) : 3538.2 (844.9)min \u0026le; med \u0026le; max:976 \u0026le; 3580 \u0026le; 7062IQR (CV) : 1131.2 (0.2) 3116 distinct values  7685 (48.8%)   Fusiform [labelled, integer] UCSF Fusiform Mean (sd) : 17341.8 (2796.1)min \u0026le; med \u0026le; max:7739 \u0026le; 17341 \u0026le; 29950IQR (CV) : 3695.5 (0.2) 5532 distinct values  7685 (48.8%)   MidTemp [labelled, integer] UCSF Med Temp Mean (sd) : 19418.2 (3120.7)min \u0026le; med \u0026le; max:8044 \u0026le; 19424.5 \u0026le; 32324IQR (CV) : 4148 (0.2) 5765 distinct values  7685 (48.8%)   ICV [labelled, numeric] UCSF ICV Mean (sd) : 1523949 (170633.6)min \u0026le; med \u0026le; max:708913.2 \u0026le; 1512696 \u0026le; 3500154IQR (CV) : 222145.2 (0.1) 9693 distinct values  6040 (38.4%)   DX [labelled, factor] Diagnosis 1. CN2. MCI3. Dementia 3800(34.6%)4802(43.7%)2393(21.8%)  4746 (30.2%)   mPACCdigit [labelled, numeric] ADNI modified Preclinical Alzheimer's Cognitive Composite (PACC) with Digit Symbol Substitution Mean (sd) : -5.9 (8)min \u0026le; med \u0026le; max:-58.9 \u0026le; -3.9 \u0026le; 7.8IQR (CV) : 10.8 (-1.4) 4765 distinct values  4705 (29.9%)   mPACCtrailsB [labelled, numeric] ADNI modified Preclinical Alzheimer's Cognitive Composite (PACC) with Trails B Mean (sd) : -5.5 (7.7)min \u0026le; med \u0026le; max:-58.9 \u0026le; -3.5 \u0026le; 12.5IQR (CV) : 10.1 (-1.4) 9492 distinct values  4699 (29.9%)   EXAMDATE.bl [labelled, Date] Date min : 2005-09-07med : 2010-12-20max : 2022-01-05range : 16y 3m 29d 1298 distinct values  0 (0.0%)   CDRSB.bl [labelled, numeric] CDR-SB Mean (sd) : 1.2 (1.5)min \u0026le; med \u0026le; max:0 \u0026le; 1 \u0026le; 10IQR (CV) : 2 (1.2) 18 distinct values  0 (0.0%)   ADAS11.bl [labelled, numeric] ADAS 11 Mean (sd) : 9.3 (5.8)min \u0026le; med \u0026le; max:0 \u0026le; 8 \u0026le; 42.7IQR (CV) : 7 (0.6) 106 distinct values  35 (0.2%)   ADAS13.bl [labelled, numeric] ADAS 13 (including Delayed Word Recall and Number Cancellation) Mean (sd) : 14.7 (8.6)min \u0026le; med \u0026le; max:0 \u0026le; 13 \u0026le; 54.7IQR (CV) : 11.7 (0.6) 144 distinct values  105 (0.7%)   ADASQ4.bl [labelled, numeric] ADAS Delayed Word Recall Mean (sd) : 4.7 (2.8)min \u0026le; med \u0026le; max:0 \u0026le; 4 \u0026le; 10IQR (CV) : 5 (0.6) 11 distinct values  7 (0.0%)   MMSE.bl [labelled, numeric] MMSE Mean (sd) : 27.7 (2.4)min \u0026le; med \u0026le; max:16 \u0026le; 28 \u0026le; 30IQR (CV) : 4 (0.1) 15 distinct values  1 (0.0%)   RAVLT.immediate.bl [labelled, numeric] RAVLT Immediate (sum of 5 trials) Mean (sd) : 37.6 (12.2)min \u0026le; med \u0026le; max:0 \u0026le; 37 \u0026le; 71IQR (CV) : 18 (0.3) 69 distinct values  41 (0.3%)   RAVLT.learning.bl [labelled, numeric] RAVLT Learning (trial 5 - trial 1) Mean (sd) : 4.6 (2.7)min \u0026le; med \u0026le; max:-8 \u0026le; 4 \u0026le; 12IQR (CV) : 4 (0.6) 18 distinct values  41 (0.3%)   RAVLT.forgetting.bl [labelled, numeric] RAVLT Forgetting (trial 5 - delayed) Mean (sd) : 4.2 (2.6)min \u0026le; med \u0026le; max:-28 \u0026le; 4 \u0026le; 15IQR (CV) : 3 (0.6) 25 distinct values  42 (0.3%)   RAVLT.perc.forgetting.bl [labelled, numeric] RAVLT Percent Forgetting Mean (sd) : 52.9 (35.1)min \u0026le; med \u0026le; max:-400 \u0026le; 50 \u0026le; 100IQR (CV) : 60.7 (0.7) 87 distinct values  64 (0.4%)   LDELTOTAL.bl [labelled, numeric] Logical Memory - Delayed Recall Mean (sd) : 8.2 (5.3)min \u0026le; med \u0026le; max:0 \u0026le; 8 \u0026le; 23IQR (CV) : 8 (0.6) 24 distinct values  5 (0.0%)   DIGITSCOR.bl [labelled, numeric] Digit Symbol Substitution Mean (sd) : 40.3 (12.4)min \u0026le; med \u0026le; max:0 \u0026le; 41 \u0026le; 80IQR (CV) : 15 (0.3) 68 distinct values  8531 (54.2%)   TRABSCOR.bl [labelled, numeric] Trails B Mean (sd) : 108.1 (66.3)min \u0026le; med \u0026le; max:0 \u0026le; 85.5 \u0026le; 300IQR (CV) : 57 (0.6) 244 distinct values  265 (1.7%)   FAQ.bl [labelled, numeric] FAQ Mean (sd) : 3 (5.3)min \u0026le; med \u0026le; max:0 \u0026le; 0 \u0026le; 30IQR (CV) : 4 (1.7) 31 distinct values  87 (0.6%)   mPACCdigit.bl [labelled, numeric] ADNI modified Preclinical Alzheimer's Cognitive Composite (PACC) with Digit Symbol Substitution Mean (sd) : -4.6 (5.7)min \u0026le; med \u0026le; max:-23.6 \u0026le; -3.5 \u0026le; 6.3IQR (CV) : 8.3 (-1.2) 1415 distinct values  3 (0.0%)   mPACCtrailsB.bl [labelled, numeric] ADNI modified Preclinical Alzheimer's Cognitive Composite (PACC) with Trails B Mean (sd) : -4.4 (5.4)min \u0026le; med \u0026le; max:-23.6 \u0026le; -3.2 \u0026le; 7.4IQR (CV) : 7.9 (-1.2) 2258 distinct values  3 (0.0%)   FLDSTRENG.bl [labelled, character] MRI Field Strength 1. 1.5 Tesla MRI2. 3 Tesla MRI 7218(59.9%)4830(40.1%)  3693 (23.5%)   FSVERSION.bl [labelled, character] FreeSurfer Software Version 1. Cross-Sectional FreeSurfe2. Cross-Sectional FreeSurfe3. Cross-Sectional FreeSurfe 6843(44.3%)1402(9.1%)7218(46.7%)  278 (1.8%)   IMAGEUID.bl [labelled, integer] LONI Image ID Mean (sd) : 258116.6 (272605.6)min \u0026le; med \u0026le; max:32003 \u0026le; 223240 \u0026le; 1495816IQR (CV) : 231683 (1.1) 2255 distinct values  278 (1.8%)   Ventricles.bl [labelled, numeric] UCSF Ventricles Mean (sd) : 38141.3 (21478.8)min \u0026le; med \u0026le; max:5650 \u0026le; 33122 \u0026le; 157712.8IQR (CV) : 25934 (0.6) 2170 distinct values  758 (4.8%)   Hippocampus.bl [labelled, numeric] UCSF Hippocampus Mean (sd) : 6970 (1155.5)min \u0026le; med \u0026le; max:2991 \u0026le; 7076 \u0026le; 10769IQR (CV) : 1569 (0.2) 1757 distinct values  2126 (13.5%)   WholeBrain.bl [labelled, numeric] UCSF WholeBrain Mean (sd) : 1029916 (109355.9)min \u0026le; med \u0026le; max:521286.6 \u0026le; 1028060 \u0026le; 1486036IQR (CV) : 149586.2 (0.1) 2216 distinct values  473 (3.0%)   Entorhinal.bl [labelled, integer] UCSF Entorhinal Mean (sd) : 3627.7 (780.9)min \u0026le; med \u0026le; max:1106 \u0026le; 3650 \u0026le; 6265IQR (CV) : 1032 (0.2) 1452 distinct values  2282 (14.5%)   Fusiform.bl [labelled, integer] UCSF Fusiform Mean (sd) : 17642.1 (2660.4)min \u0026le; med \u0026le; max:8991 \u0026le; 17578 \u0026le; 29950IQR (CV) : 3530 (0.2) 1795 distinct values  2282 (14.5%)   MidTemp.bl [labelled, integer] UCSF Med Temp Mean (sd) : 19897.2 (2980.4)min \u0026le; med \u0026le; max:9375 \u0026le; 19841 \u0026le; 32324IQR (CV) : 3898 (0.1) 1812 distinct values  2282 (14.5%)   ICV.bl [labelled, numeric] UCSF ICV Mean (sd) : 1528588 (166951.9)min \u0026le; med \u0026le; max:882241.6 \u0026le; 1515918 \u0026le; 3315208IQR (CV) : 221441.9 (0.1) 2254 distinct values  279 (1.8%)   MOCA.bl [labelled, numeric] MOCA Mean (sd) : 23.8 (3.9)min \u0026le; med \u0026le; max:4 \u0026le; 24 \u0026le; 30IQR (CV) : 5 (0.2) 26 distinct values  7368 (46.8%)   EcogPtMem.bl [labelled, numeric] Pt ECog - Mem Mean (sd) : 2.1 (0.7)min \u0026le; med \u0026le; max:1 \u0026le; 2 \u0026le; 4IQR (CV) : 1 (0.3) 45 distinct values  7264 (46.1%)   EcogPtLang.bl [labelled, numeric] Pt ECog - Lang Mean (sd) : 1.7 (0.6)min \u0026le; med \u0026le; max:1 \u0026le; 1.6 \u0026le; 4IQR (CV) : 0.9 (0.4) 53 distinct values  7270 (46.2%)   EcogPtVisspat.bl [labelled, numeric] Pt ECog - Vis/Spat Mean (sd) : 1.4 (0.5)min \u0026le; med \u0026le; max:1 \u0026le; 1.1 \u0026le; 4IQR (CV) : 0.5 (0.4) 46 distinct values  7298 (46.4%)   EcogPtPlan.bl [labelled, numeric] Pt ECog - Plan Mean (sd) : 1.4 (0.5)min \u0026le; med \u0026le; max:1 \u0026le; 1.2 \u0026le; 4IQR (CV) : 0.6 (0.4) 22 distinct values  7263 (46.1%)   EcogPtOrgan.bl [labelled, numeric] Pt ECog - Organ Mean (sd) : 1.5 (0.6)min \u0026le; med \u0026le; max:1 \u0026le; 1.3 \u0026le; 4IQR (CV) : 0.7 (0.4) 35 distinct values  7436 (47.2%)   EcogPtDivatt.bl [labelled, numeric] Pt ECog - Div atten Mean (sd) : 1.8 (0.7)min \u0026le; med \u0026le; max:1 \u0026le; 1.8 \u0026le; 4IQR (CV) : 1 (0.4) 16 distinct values  7315 (46.5%)   EcogPtTotal.bl [labelled, numeric] Pt ECog - Total Mean (sd) : 1.7 (0.5)min \u0026le; med \u0026le; max:1 \u0026le; 1.5 \u0026le; 3.9IQR (CV) : 0.6 (0.3) 307 distinct values  7262 (46.1%)   EcogSPMem.bl [labelled, numeric] SP ECog - Mem Mean (sd) : 2 (0.9)min \u0026le; med \u0026le; max:1 \u0026le; 1.6 \u0026le; 4IQR (CV) : 1.2 (0.5) 49 distinct values  7301 (46.4%)   EcogSPLang.bl [labelled, numeric] SP ECog - Lang Mean (sd) : 1.5 (0.7)min \u0026le; med \u0026le; max:1 \u0026le; 1.2 \u0026le; 4IQR (CV) : 0.8 (0.4) 60 distinct values  7292 (46.3%)   EcogSPVisspat.bl [labelled, numeric] SP ECog - Vis/Spat Mean (sd) : 1.4 (0.6)min \u0026le; med \u0026le; max:1 \u0026le; 1 \u0026le; 4IQR (CV) : 0.4 (0.5) 51 distinct values  7413 (47.1%)   EcogSPPlan.bl [labelled, numeric] SP ECog - Plan Mean (sd) : 1.5 (0.7)min \u0026le; med \u0026le; max:1 \u0026le; 1.2 \u0026le; 4IQR (CV) : 0.8 (0.5) 30 distinct values  7352 (46.7%)   EcogSPOrgan.bl [labelled, numeric] SP ECog - Organ Mean (sd) : 1.6 (0.8)min \u0026le; med \u0026le; max:1 \u0026le; 1.2 \u0026le; 4IQR (CV) : 0.8 (0.5) 37 distinct values  7675 (48.8%)   EcogSPDivatt.bl [labelled, numeric] SP ECog - Div atten Mean (sd) : 1.8 (0.9)min \u0026le; med \u0026le; max:1 \u0026le; 1.5 \u0026le; 4IQR (CV) : 1.2 (0.5) 19 distinct values  7465 (47.4%)   EcogSPTotal.bl [labelled, numeric] SP ECog - Total Mean (sd) : 1.6 (0.7)min \u0026le; med \u0026le; max:1 \u0026le; 1.3 \u0026le; 3.9IQR (CV) : 0.8 (0.4) 421 distinct values  7301 (46.4%)   ABETA.bl [labelled, character] CSF ABETA 1. 17002. 16053. 10064. 13145. 600.26. 657.67. 16858. 16899. 536.810. 723.1[ 939 others ] 1819(18.4%)32(0.3%)29(0.3%)27(0.3%)27(0.3%)27(0.3%)26(0.3%)26(0.3%)26(0.3%)26(0.3%)7812(79.1%)  5864 (37.3%)   TAU.bl [labelled, character] CSF TAU 1. 107.32. 176.33. 218.74. 266.85. 210.86. 211.87. 228.68. 261.39. 23410. 257.8[ 1026 others ] 44(0.4%)41(0.4%)36(0.4%)36(0.4%)33(0.3%)33(0.3%)33(0.3%)33(0.3%)31(0.3%)31(0.3%)9526(96.4%)  5864 (37.3%)   PTAU.bl [labelled, character] CSF PTAU 1. 18.852. 21.43. 27.124. 21.455. 17.636. 21.197. 27.568. 15.079. 16.7710. 26.3[ 1037 others ] 47(0.5%)43(0.4%)36(0.4%)35(0.4%)34(0.3%)33(0.3%)33(0.3%)32(0.3%)32(0.3%)32(0.3%)9520(96.4%)  5864 (37.3%)   FDG.bl [labelled, numeric] Average FDG-PET of angular, temporal, and posterior cingulate Mean (sd) : 1.3 (0.1)min \u0026le; med \u0026le; max:0.7 \u0026le; 1.3 \u0026le; 1.7IQR (CV) : 0.2 (0.1) 1484 distinct values  4896 (31.1%)   PIB.bl [labelled, numeric] Average PIB SUVR of frontal cortex, anterior cingulate, precuneus cortex, and parietal cortex Mean (sd) : 1.6 (0.3)min \u0026le; med \u0026le; max:1.2 \u0026le; 1.5 \u0026le; 2.3IQR (CV) : 0.5 (0.2) 20 distinct values  15588 (99.0%)   AV45.bl [labelled, numeric] AV45 ratio (cortical grey matter/whole cerebellum) Summary florbetapir cortical SUVR normalized by whole cerebellum. See Jagust lab PDF on LONI for details and cutoff info Mean (sd) : 1.2 (0.2)min \u0026le; med \u0026le; max:0.8 \u0026le; 1.1 \u0026le; 2IQR (CV) : 0.3 (0.2) 1025 distinct values  8290 (52.7%)   FBB.bl [labelled, numeric] FBB ratio (cortical grey matter/whole cerebellum) Summary florbetaben cortical SUVR normalized by whole cerebellum. See Jagust lab PDF on LONI for details and cutoff info Mean (sd) : 1.2 (0.2)min \u0026le; med \u0026le; max:0.9 \u0026le; 1 \u0026le; 1.9IQR (CV) : 0.3 (0.2) 299 distinct values  14866 (94.4%)   Years.bl [numeric]  Mean (sd) : 2.6 (2.8)min \u0026le; med \u0026le; max:0 \u0026le; 1.6 \u0026le; 16.1IQR (CV) : 3.5 (1.1) 2677 distinct values  0 (0.0%)   Month.bl [numeric]  Mean (sd) : 31.2 (33.4)min \u0026le; med \u0026le; max:0 \u0026le; 18.8 \u0026le; 192.5IQR (CV) : 41.5 (1.1) 2677 distinct values  0 (0.0%)   Month [labelled, factor] Months since baseline 1. 02. 33. 64. 125. 186. 247. 308. 369. 4210. 48[ 91 others ] 2378(15.1%)796(5.1%)1613(10.2%)1884(12.0%)1325(8.4%)1550(9.8%)817(5.2%)999(6.3%)357(2.3%)683(4.3%)3339(21.2%)  0 (0.0%)   M [labelled, numeric] Month since baseline Mean (sd) : 31 (33.3)min \u0026le; med \u0026le; max:0 \u0026le; 18 \u0026le; 192IQR (CV) : 42 (1.1) 34 distinct values  0 (0.0%)    Generated by summarytools 1.0.0 (R version 4.1.2)2022-02-27\n  ","date":"2022-02-27T00:00:00Z","image":"https://Hardy-Lab-Statistical-Genetics.github.io/p/introduction-to-adni-dataset/images/Alzhemers_hu1144e2b95927a8bf2d824c64757deed2_192105_120x120_fill_q75_box_smart1.jpg","permalink":"https://Hardy-Lab-Statistical-Genetics.github.io/p/introduction-to-adni-dataset/","title":"Introduction to ADNI Dataset"}]